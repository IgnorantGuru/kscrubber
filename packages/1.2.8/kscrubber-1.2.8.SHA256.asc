-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

f40a365e51842da48cee994c3872367df73a523be2faea568cbb6ebab897b2f7  kscrubber_1.2.8-1_all.deb
b926361e2f893c6bed9b7cd938e3dc7c509cae362b71eb603105083e0dadff5a  kscrubber-1.2.8.tar.xz

#
# This file (kscrubber-1.2.8.SHA256.asc) is used to authenticate download of
# kscrubber version 1.2.8
# 
# Homepage: http://igurublog.wordpress.com/downloads/script-kscrubber/
# 
# 
# Why Authenticate?
# 
#   Verifying the authenticity of downloaded files prior to installation is
#   important to ensure that your download is not corrupt and that no one has
#   tampered with the server holding the files.
#
#
# 1) If you don't already have IgnorantGuru's CURRENT key on your keyring:
#
#   gpg --keyserver keys.gnupg.net --recv-keys 0x7977070A723C6CCB696C0B0227A5AC5A01937621
#     (if you receive an error, try again)
#     
#   Also visually verify that the given fingerprint matches the one shown here:
#     http://igurublog.wordpress.com/contact-ignorantguru/
#
#
# 2) Download one or more files (the first is required):
#
#   wget https://github.com/IgnorantGuru/kscrubber/raw/master/packages/1.2.8/kscrubber-1.2.8.SHA256.asc
#   wget https://github.com/IgnorantGuru/kscrubber/raw/master/packages/1.2.8/kscrubber_1.2.8-1_all.deb
#   wget https://github.com/IgnorantGuru/kscrubber/raw/master/packages/1.2.8/kscrubber-1.2.8.tar.xz
#
#
# 3) Check signature and files:
#
#   gpg -d kscrubber-1.2.8.SHA256.asc | sha256sum --check
#
#   This should report a good signature and an OK for each file present:  
#
#     gpg: Signature made <SIGNATURE DATE> using DSA key ID 01937621    <--
# --> kscrubber_1.2.8-1_all.deb: OK
# --> kscrubber-1.2.8.tar.xz: OK
# --> gpg: Good signature from IgnorantGuru <EMAIL>
#     gpg: WARNING: This key is not certified with a trusted signature!
#     gpg:          There is no indication that the signature belongs to the owner.
#     sha256sum: WARNING: x lines are improperly formatted
#
#   If "BAD signature" or the wrong key ID is reported, or if FAILED appears
#   next to any file you plan to use, DO NOT USE the file.  A "key is not
#   certified" warning (shown above) is normal and can be safely ignored if
#   you visually verified the key fingerprint in step 1.
#
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.12 (GNU/Linux)

iF4EAREIAAYFAk9jxmoACgkQJ6WsWgGTdiE6ogEAzQ5lz0Vn1I2e+rzBKth8BgUb
CKcMm7OVga2TTceQWEEA/3X3NFdEhgriFmhEDgDR4iBIFC27WCDFmXdnIjGImwaC
=Lq5x
-----END PGP SIGNATURE-----
